
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '096CD26B8B39C23BBFF19447FB525169'
    
_lr_action_items = {'COMMA':([9,14,16,17,19,21,22,25,26,27,28,36,38,58,60,61,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,98,99,100,109,110,111,120,],[-56,-56,-48,-44,-49,-46,-45,-39,-38,-40,64,-52,-54,-51,-34,-37,-33,-25,-26,-18,-22,-32,-28,-23,-31,-30,-21,-19,-24,-20,-29,-27,-35,-36,64,64,-56,-47,-50,-53,]),'LESSTHANEQUAL':([14,15,16,17,19,21,22,25,26,36,38,57,58,60,61,62,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,99,100,109,110,111,120,121,],[-56,41,-48,-44,-49,-46,-45,-56,41,-52,-54,41,-51,41,-37,41,41,-44,-49,41,-56,41,-48,41,41,-33,-25,-26,-18,-22,-32,-28,-23,-31,41,-21,-19,-24,-20,41,-27,-35,41,-36,-56,41,-56,-47,-50,-53,41,]),'IN':([14,15,16,17,19,21,22,25,26,36,38,57,58,60,61,62,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,99,100,109,110,111,120,121,],[-56,39,-48,-44,-49,-46,-45,-56,39,-52,-54,39,-51,39,-37,39,39,-44,-49,39,-56,39,-48,39,39,-33,39,39,-18,-22,39,39,-23,39,39,-21,-19,-24,-20,39,39,-35,39,-36,-56,39,-56,-47,-50,-53,39,]),'$end':([0,2,3,5,53,69,91,],[-56,-3,-1,0,-56,-2,-4,]),'WHILE':([2,4,7,11,32,53,61,69,91,97,98,105,106,107,108,112,115,116,117,119,122,123,124,125,],[-3,8,-17,8,8,-56,-37,-2,-4,-56,-36,-16,-14,-15,-56,-12,-9,-8,-7,-56,-10,-56,-13,-11,]),'STRING':([6,9,18,20,24,29,33,34,35,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,59,64,118,],[17,17,17,17,17,67,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'GREATERTHANEQUAL':([14,15,16,17,19,21,22,25,26,36,38,57,58,60,61,62,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,99,100,109,110,111,120,121,],[-56,40,-48,-44,-49,-46,-45,-56,40,-52,-54,40,-51,40,-37,40,40,-44,-49,40,-56,40,-48,40,40,-33,-25,-26,-18,-22,-32,-28,-23,-31,40,-21,-19,-24,-20,40,-27,-35,40,-36,-56,40,-56,-47,-50,-53,40,]),'GREATERTHAN':([14,15,16,17,19,21,22,25,26,36,38,57,58,60,61,62,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,99,100,109,110,111,120,121,],[-56,55,-48,-44,-49,-46,-45,-56,55,-52,-54,55,-51,55,-37,55,55,-44,-49,55,-56,55,-48,55,55,-33,-25,-26,-18,-22,-32,-28,-23,-31,55,-21,-19,-24,-20,55,-27,-35,55,-36,-56,55,-56,-47,-50,-53,55,]),'LPAREN':([1,6,8,9,10,13,18,19,20,24,29,33,34,35,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,59,64,68,118,],[6,18,24,18,29,35,18,59,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,59,18,]),'LCURLY':([0,53,97,108,123,],[4,4,4,4,4,]),'ASEQUAL':([12,104,],[34,118,]),'LESSTHAN':([14,15,16,17,19,21,22,25,26,36,38,57,58,60,61,62,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,99,100,109,110,111,120,121,],[-56,45,-48,-44,-49,-46,-45,-56,45,-52,-54,45,-51,45,-37,45,45,-44,-49,45,-56,45,-48,45,45,-33,-25,-26,-18,-22,-32,-28,-23,-31,45,-21,-19,-24,-20,45,-27,-35,45,-36,-56,45,-56,-47,-50,-53,45,]),'POWER':([14,15,16,17,19,21,22,25,26,36,38,57,58,60,61,62,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,99,100,109,110,111,120,121,],[-56,42,-48,-44,-49,-46,-45,-56,42,-52,-54,42,-51,42,-37,42,42,-44,-49,42,-56,42,-48,42,42,-33,42,42,-18,42,42,42,42,42,42,-21,42,-24,-20,42,42,-35,42,-36,-56,42,-56,-47,-50,-53,42,]),'LBRACKET':([2,4,6,7,9,11,12,14,17,18,19,20,23,24,25,29,32,33,34,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,59,61,64,67,68,69,72,91,97,98,99,105,106,107,108,109,112,115,116,117,118,119,122,123,124,125,],[-3,9,9,-17,9,9,33,37,56,9,37,9,9,9,37,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-56,9,9,9,-37,9,56,37,-2,37,-4,-56,-36,37,-16,-14,-15,-56,37,-12,-9,-8,-7,9,-56,-10,-56,-13,-11,]),'PLUS':([7,14,15,16,17,19,21,22,25,26,36,38,57,58,60,61,62,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,99,100,109,110,111,120,121,],[23,-56,43,-48,-44,-49,-46,-45,-56,43,-52,-54,43,-51,43,-37,43,43,-44,-49,43,-56,43,-48,43,43,23,43,43,-18,-22,43,43,-23,43,43,-21,-19,-24,-20,43,43,-35,43,-36,-56,43,-56,-47,-50,-53,43,]),'EQUALS':([14,15,16,17,19,21,22,25,26,36,38,57,58,60,61,62,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,99,100,109,110,111,120,121,],[-56,44,-48,-44,-49,-46,-45,-56,44,-52,-54,44,-51,44,-37,44,44,-44,-49,44,-56,44,-48,44,44,-33,-25,-26,-18,-22,-32,-28,-23,-31,44,-21,-19,-24,-20,44,-27,-35,44,-36,-56,44,-56,-47,-50,-53,44,]),'RCURLY':([2,7,11,30,31,32,53,61,69,70,91,97,98,105,106,107,108,112,115,116,117,119,122,123,124,125,],[-3,-17,-56,69,-6,-56,-56,-37,-2,-5,-4,-56,-36,-16,-14,-15,-56,-12,-9,-8,-7,-56,-10,-56,-13,-11,]),'RBRACKET':([9,14,16,17,19,21,22,25,26,27,28,36,38,58,60,61,63,65,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,98,99,100,109,110,111,113,114,120,],[-56,-56,-48,-44,-49,-46,-45,-39,-38,-40,-55,-52,-54,-51,-34,-37,98,-43,104,109,-33,-25,-26,-18,-22,-32,-28,-23,-31,-30,-21,-19,-24,-20,-29,-27,110,-35,-36,-55,-55,-56,-47,-50,-42,-41,-53,]),'PRINT':([2,4,7,11,32,53,61,69,91,97,98,105,106,107,108,112,115,116,117,119,122,123,124,125,],[-3,10,-17,10,10,-56,-37,-2,-4,-56,-36,-16,-14,-15,-56,-12,-9,-8,-7,-56,-10,-56,-13,-11,]),'TIMES':([14,15,16,17,19,21,22,25,26,36,38,57,58,60,61,62,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,99,100,109,110,111,120,121,],[-56,52,-48,-44,-49,-46,-45,-56,52,-52,-54,52,-51,52,-37,52,52,-44,-49,52,-56,52,-48,52,52,-33,52,52,52,52,52,52,52,52,52,-21,52,52,-20,52,52,-35,52,-36,-56,52,-56,-47,-50,-53,52,]),'OR':([14,15,16,17,19,21,22,25,26,36,38,57,58,60,61,62,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,99,100,109,110,111,120,121,],[-56,48,-48,-44,-49,-46,-45,-56,48,-52,-54,48,-51,-34,-37,48,48,-44,-49,48,-56,48,-48,48,48,-33,-25,-26,-18,-22,-32,-28,-23,-31,-30,-21,-19,-24,-20,-29,-27,-35,48,-36,-56,48,-56,-47,-50,-53,48,]),'SEMICOLON':([14,16,17,19,21,22,36,38,58,60,61,72,73,74,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,98,101,102,103,109,110,111,120,121,],[-56,-48,-44,-49,-46,-45,-52,-54,-51,-34,-37,105,106,107,-33,-25,-26,-18,-22,-32,-28,-23,-31,-30,-21,-19,-24,-20,-29,-27,-35,-36,115,116,117,-56,-47,-50,-53,124,]),'IF':([2,4,7,11,32,53,61,69,91,97,98,105,106,107,108,112,115,116,117,119,122,123,124,125,],[-3,13,-17,13,13,-56,-37,-2,-4,-56,-36,-16,-14,-15,-56,-12,-9,-8,-7,-56,-10,-56,-13,-11,]),'DIVIDE':([14,15,16,17,19,21,22,25,26,36,38,57,58,60,61,62,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,99,100,109,110,111,120,121,],[-56,49,-48,-44,-49,-46,-45,-56,49,-52,-54,49,-51,49,-37,49,49,-44,-49,49,-56,49,-48,49,49,-33,49,49,49,49,49,49,49,49,49,-21,49,49,-20,49,49,-35,49,-36,-56,49,-56,-47,-50,-53,49,]),'VARIABLE':([0,2,4,6,7,9,11,18,20,24,29,32,33,34,35,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,59,61,64,69,91,97,98,105,106,107,108,112,115,116,117,118,119,122,123,124,125,],[1,-3,12,19,-17,19,12,19,19,19,68,12,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,19,19,19,-37,19,-2,-4,1,-36,-16,-14,-15,1,-12,-9,-8,-7,19,-56,-10,1,-13,-11,]),'MINUS':([14,15,16,17,19,21,22,25,26,36,38,57,58,60,61,62,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,99,100,109,110,111,120,121,],[-56,46,-48,-44,-49,-46,-45,-56,46,-52,-54,46,-51,46,-37,46,46,-44,-49,46,-56,46,-48,46,46,-33,46,46,-18,-22,46,46,-23,46,46,-21,-19,-24,-20,46,46,-35,46,-36,-56,46,-56,-47,-50,-53,46,]),'FLRDIV':([14,15,16,17,19,21,22,25,26,36,38,57,58,60,61,62,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,99,100,109,110,111,120,121,],[-56,50,-48,-44,-49,-46,-45,-56,50,-52,-54,50,-51,50,-37,50,50,-44,-49,50,-56,50,-48,50,50,-33,50,50,-18,50,50,50,50,50,50,-21,-19,-24,-20,50,50,-35,50,-36,-56,50,-56,-47,-50,-53,50,]),'NOT':([6,9,18,20,24,29,33,34,35,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,59,64,118,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'ELSE':([2,53,69,91,108,119,],[-3,-56,-2,-4,-56,123,]),'NOTEQUAL':([14,15,16,17,19,21,22,25,26,36,38,57,58,60,61,62,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,99,100,109,110,111,120,121,],[-56,47,-48,-44,-49,-46,-45,-56,47,-52,-54,47,-51,47,-37,47,47,-44,-49,47,-56,47,-48,47,47,-33,-25,-26,-18,-22,-32,-28,-23,-31,47,-21,-19,-24,-20,47,-27,-35,47,-36,-56,47,-56,-47,-50,-53,47,]),'MOD':([14,15,16,17,19,21,22,25,26,36,38,57,58,60,61,62,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,99,100,109,110,111,120,121,],[-56,51,-48,-44,-49,-46,-45,-56,51,-52,-54,51,-51,51,-37,51,51,-44,-49,51,-56,51,-48,51,51,-33,51,51,51,51,51,51,51,51,51,-21,51,-24,-20,51,51,-35,51,-36,-56,51,-56,-47,-50,-53,51,]),'RPAREN':([14,15,16,17,19,21,22,36,38,57,58,60,61,62,66,67,68,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,109,110,111,120,],[-56,53,-48,-44,-49,-46,-45,-52,-54,95,-51,-34,-37,97,101,-44,-49,108,-33,-25,-26,-18,-22,-32,-28,-23,-31,-30,-21,-19,-24,-20,-29,-27,-35,111,-36,-56,-47,-50,-53,]),'REAL':([6,9,18,20,24,29,33,34,35,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,59,64,118,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'AND':([14,15,16,17,19,21,22,25,26,36,38,57,58,60,61,62,66,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,99,100,109,110,111,120,121,],[-56,54,-48,-44,-49,-46,-45,-56,54,-52,-54,54,-51,-34,-37,54,54,-44,-49,54,-56,54,-48,54,54,-33,-25,-26,-18,-22,-32,-28,-23,-31,54,-21,-19,-24,-20,-29,-27,-35,54,-36,-56,54,-56,-47,-50,-53,54,]),'INTEGER':([6,9,18,20,24,29,33,34,35,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,56,59,64,118,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,94,21,21,21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'list':([4,6,9,11,18,20,23,24,29,32,33,34,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,59,64,118,],[7,14,25,7,14,14,61,14,14,7,14,72,14,14,77,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,99,14,]),'statement_tail':([11,32,],[30,70,]),'future_list_elements':([28,99,100,],[63,113,114,]),'statement':([4,11,32,],[11,32,32,]),'list_index':([6,9,18,20,24,29,33,34,35,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,59,64,118,],[16,16,16,16,16,16,16,74,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'expression':([6,9,18,20,24,29,33,34,35,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,55,59,64,118,],[15,26,57,60,62,66,71,73,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,96,100,121,]),'block':([0,53,97,108,123,],[3,91,112,119,125,]),'index_tail':([14,19,25,68,72,99,109,],[36,58,36,58,36,36,120,]),'list_elements':([9,],[28,]),'program':([0,],[5,]),'empty_list':([28,99,100,],[65,65,65,]),'empty':([0,9,11,14,19,25,32,53,68,72,97,99,108,109,119,123,],[2,27,31,38,38,38,31,2,38,38,2,38,2,38,122,2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_run_program','main.py',452),
  ('block -> LCURLY statement statement_tail RCURLY','block',4,'p_block_def','main.py',456),
  ('block -> empty','block',1,'p_block_def','main.py',457),
  ('block -> VARIABLE LPAREN expression RPAREN block','block',5,'p_function_def','main.py',466),
  ('statement_tail -> statement statement_tail','statement_tail',2,'p_block_statement_tail','main.py',471),
  ('statement_tail -> empty','statement_tail',1,'p_block_statement_tail_e','main.py',481),
  ('statement -> PRINT LPAREN VARIABLE RPAREN SEMICOLON','statement',5,'p_block_print_variable','main.py',485),
  ('statement -> PRINT LPAREN STRING RPAREN SEMICOLON','statement',5,'p_block_print_string','main.py',489),
  ('statement -> PRINT LPAREN expression RPAREN SEMICOLON','statement',5,'p_block_print_expr','main.py',493),
  ('statement -> IF LPAREN expression RPAREN block empty','statement',6,'p_block_if','main.py',497),
  ('statement -> IF LPAREN expression RPAREN block ELSE block','statement',7,'p_block_if_else','main.py',501),
  ('statement -> WHILE LPAREN expression RPAREN block','statement',5,'p_statement_while','main.py',505),
  ('statement -> VARIABLE LBRACKET expression RBRACKET ASEQUAL expression SEMICOLON','statement',7,'p_statement_assign_array','main.py',510),
  ('statement -> VARIABLE ASEQUAL expression SEMICOLON','statement',4,'p_statement_assign','main.py',515),
  ('statement -> VARIABLE ASEQUAL list_index SEMICOLON','statement',4,'p_statement_assign','main.py',516),
  ('statement -> VARIABLE ASEQUAL list SEMICOLON','statement',4,'p_statement_assign_list','main.py',525),
  ('statement -> list','statement',1,'p_statement_expr','main.py',531),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','main.py',539),
  ('expression -> expression FLRDIV expression','expression',3,'p_expression_binop','main.py',540),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','main.py',541),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','main.py',542),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','main.py',543),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','main.py',544),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','main.py',545),
  ('expression -> expression GREATERTHANEQUAL expression','expression',3,'p_expression_binop','main.py',546),
  ('expression -> expression LESSTHANEQUAL expression','expression',3,'p_expression_binop','main.py',547),
  ('expression -> expression GREATERTHAN expression','expression',3,'p_expression_binop','main.py',548),
  ('expression -> expression LESSTHAN expression','expression',3,'p_expression_binop','main.py',549),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','main.py',550),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','main.py',551),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_binop','main.py',552),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_binop','main.py',553),
  ('expression -> expression IN list','expression',3,'p_expression_binop','main.py',554),
  ('expression -> NOT expression','expression',2,'p_expression_binop','main.py',555),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_paren','main.py',565),
  ('list -> LBRACKET list_elements future_list_elements RBRACKET','list',4,'p_list_builder','main.py',569),
  ('list -> list PLUS list','list',3,'p_list_builder','main.py',570),
  ('list_elements -> expression','list_elements',1,'p_list_elements','main.py',581),
  ('list_elements -> list','list_elements',1,'p_list_elements','main.py',582),
  ('list_elements -> empty','list_elements',1,'p_list_elements','main.py',583),
  ('future_list_elements -> COMMA expression future_list_elements','future_list_elements',3,'p_list_future_elements','main.py',590),
  ('future_list_elements -> COMMA list future_list_elements','future_list_elements',3,'p_list_future_elements','main.py',591),
  ('future_list_elements -> empty_list','future_list_elements',1,'p_list_future_elements','main.py',592),
  ('expression -> STRING','expression',1,'p_expression_string','main.py',601),
  ('expression -> REAL','expression',1,'p_expression_number','main.py',605),
  ('expression -> INTEGER','expression',1,'p_expression_number','main.py',606),
  ('expression -> STRING LBRACKET INTEGER RBRACKET','expression',4,'p_expression_number','main.py',607),
  ('expression -> list_index','expression',1,'p_expression_list_index','main.py',619),
  ('expression -> VARIABLE','expression',1,'p_expression_variable','main.py',623),
  ('expression -> VARIABLE LPAREN expression RPAREN','expression',4,'p_expression_function','main.py',630),
  ('list_index -> VARIABLE index_tail','list_index',2,'p_list_index','main.py',637),
  ('list_index -> list index_tail','list_index',2,'p_list_index_1','main.py',646),
  ('index_tail -> LBRACKET expression RBRACKET index_tail','index_tail',4,'p_index_tail','main.py',654),
  ('index_tail -> empty','index_tail',1,'p_index_tail','main.py',655),
  ('empty_list -> <empty>','empty_list',0,'p_empty_list','main.py',672),
  ('empty -> <empty>','empty',0,'p_empty','main.py',676),
]
